---
location_data:
    input_path: './roadscene2vec_pkls/271_carla_10frame_roadscene2vec.pkl' #path to pkl containing scenegraph dataset training/testing data
    transfer_path: './roadscene2vec_pkls/1043_carla_10frame_roadscene2vec.pkl' #path to transfer dataset for transfer learning
    
model_config:
  num_relations: 12 #num of types of relations extracted, needed only for graph based models 
  model: 'rs2g' 
  num_layers: 2 #defines number of RGCN conv layers.
  load_model: True #load pretrained model
  num_of_classes: 15 #8 #num of actors
  conv_type: 'FastRGCNConv'
  hidden_dim: 64
  layer_spec: null
  pooling_type: 'sagpool'
  pooling_ratio: 0.5
  readout_type: 'mean'
  temporal_type: 'lstm_attn' #Options: 'lstm_attn' for task 'sequence classification', 'lstm_seq' for task 'collision prediction'
  lstm_input_dim: 50
  lstm_output_dim: 20
  nclass: 2 #dimension of final output
  dropout: 0.01 #dropout probability
  device: 'cuda' #device to place training/testing data batches
  activation: 'relu'
  model_load_path: './saved_graph_models/saved_model.pt' #path to load pretrained model
  model_save_path: null #path to save trained model. set to null to have model saved to ./saved_models/<wandb_run_name>.pt
  node_encoder_dim: 2 #options: 1=1D MLP, 2=2D MLP
  edge_encoder_dim: 2 #options: 1=1D MLP, 2=2D MLP

training_config:
  dataset_type: "scenegraph" #Options: real, scenegraph. scenegraph only option for graph based models
  scenegraph_dataset_type: "real" #type of data extracted to create input scenegraph data. 
  scenegraph_data_format: "carla" #Options: carla, honda
  task_type: 'sequence_classification' #Options: sequence_classification, graph_classification, collision_prediction
  n_fold: 1 #number of folds for n-fold cross validation
  learning_rate: 0.0001
  epochs: 0
  split_ratio: 0.3 #train-test split ratio
  downsample: False
  seed: 0 #seed used for train-test split
  batch_size: 1 #batch size of training, testing data
  test_step: 5 #perform test validation every n epochs
  weight_decay: 0.0005

  
wandb_config:
  entity: '<fill in your username here>'
  project: '<fill in your project name here>'

relation_extraction_settings:
  ACTOR_NAMES: ["ego car", 'car','moto','bicycle','ped','lane','light','sign', 'road'] #types of actors that can be found in data sequences. ego_car actor represents the car from whose perspective we are viewing the road. this array's structure is also used for one-hot encoding when creating node embeddings, "ego_car", "lane", "road" are assumed to always be in this list.
